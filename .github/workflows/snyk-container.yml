name: Container Scan
on: push
jobs:
  snyk:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build -t bgeveritt-snyk/goof .
    - name: Run Snyk to check Docker image for vulnerabilities
      # Snyk can be used to break the build when it detects vulnerabilities.
      continue-on-error: true
      uses: snyk/actions/docker@master
      env:
        # In order to use the Snyk Action you will need to have a Snyk API token.
        # More details in https://github.com/snyk/actions#getting-your-snyk-token
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image: bgeveritt-snyk/goof
        args: --file=Dockerfile #--exclude-base-image-vulns --severity-threshold=high --app-vulns
        #Additional arguments (args):
        #
        #--exclude-base-image-vulns: By adding the --exclude-base-image-vulns parameter 
        #we are telling Snyk not to report vulnerabilities that are introduced by Docker 
        #base image layers. This is to make sure that we are breaking the build only 
        #when we introduce new issues in the Dockerfile. The reason for ignoring base image 
        #vulnerabilities is to avoid having too much noise in the CI scan. 
        #We have already accepted the base image so we're only interested in blocking the 
        #issues we add with our customizations
        #--severity-threshold: Report only vulnerabilities at the specified level or higher.
        #Availabel options are low|medium|high|critical
        #--app-vulns: Snyk allows detection of vulnerabilities in your application dependencies
        #from container images, as well as from the operating system, all in one single scan.
