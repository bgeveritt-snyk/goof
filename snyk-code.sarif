{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/HttpToHttps",
              "name": "HttpToHttps",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "http",
                  "server"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Rocket1184/qq-bot-rebown/commit/5255a8398cf1d80f60e182c53e8532c7562e76c2?diff=split#diff-62a4be7247c4abe75f2cc11746422b86L12",
                    "lines": [
                      {
                        "line": "'use strict';",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const http = require('http');",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require('https');",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "function http2https(link) {",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": " ",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "function shortenUrl(url) {",
                        "lineNumber": 21,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/qmachine/qmachine/commit/1f9f08b5b1f9be78dd6625d93ec934befb255df7?diff=split#diff-54387be96a26d96583a0c7585e8607c5L56",
                    "lines": [
                      {
                        "line": "};",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "http = require('http');",
                        "lineNumber": 55,
                        "lineChange": "removed"
                      },
                      {
                        "line": "https = require('https');",
                        "lineNumber": 59,
                        "lineChange": "added"
                      },
                      {
                        "line": "http_GET = function (x) {",
                        "lineNumber": 57,
                        "lineChange": "removed"
                      },
                      {
                        "line": "https_GET = function (x) {",
                        "lineNumber": 61,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/vmware-samples/vmware-blockchain-samples/commit/92bf99244de7b145eb4b22e36575d9fef376600b?diff=split#diff-21a000feb5ae912714215842b628c63cL3",
                    "lines": [
                      {
                        "line": "const fs = require(\"fs\");",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "const http = require(\"http\");",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require(\"https\");",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "verifyMigrations();",
                        "lineNumber": 10,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Added https imposter tests;",
                  "Isolate config/server code and add tests ()"
                ],
                "precision": "very-high",
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "javascript/DisablePoweredBy",
              "name": "DisablePoweredBy",
              "shortDescription": {
                "text": "Information Exposure"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "express",
                  "server",
                  "helmet"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eclipse/orion.client/commit/ad8f3bce33a1ea9d1e2144e6c42f075ad25829d6?diff=split#diff-16594450dc1f06f7d9cf4a47859cfa52L175",
                    "lines": [
                      {
                        "line": "}",
                        "lineNumber": 172,
                        "lineChange": "none"
                      },
                      {
                        "line": "return express()",
                        "lineNumber": 174,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return express.Router()",
                        "lineNumber": 174,
                        "lineChange": "added"
                      },
                      {
                        "line": ".use(bodyParser.json())",
                        "lineNumber": 175,
                        "lineChange": "none"
                      },
                      {
                        "line": ".use(resource(workspaceRoot, {",
                        "lineNumber": 176,
                        "lineChange": "removed"
                      },
                      {
                        "line": ".use(apiPath(root))",
                        "lineNumber": 176,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/flowgrammable/flowsim/commit/1681245625230c6d71e1e74b0ada6551cbf2d935?diff=split#diff-4cb60403ef79ea471c0c046e9873a1e2L6",
                    "lines": [
                      {
                        "line": "var cookieSession = require('cookie-session');",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "express()",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "connect()",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "  .use(cookieParser())",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  .use(cookieSession({ secret: 'testsecret' }))",
                        "lineNumber": 7,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ajmueller/express-auth-session/commit/74209d7901e8b3cf4cf0e6f532d03f8e54e97381?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL22",
                    "lines": [
                      {
                        "line": "var authentication = require('./authentication');",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "var app = express();",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(sslRedirect());",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(helmet());",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "mongoose.connect(config.db.uri);",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Test without express",
                  "/server tests ()",
                  "secure the api with helmet"
                ],
                "precision": "very-high",
                "cwe": [
                  "CWE-200"
                ]
              }
            },
            {
              "id": "javascript/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "tests",
                  "adapter",
                  "database"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mozilla/napkin/commit/b48aa5071e69bfe5fb22a7955514ff1fa0d9ca75?diff=split#diff-8c3093706848cad6938fd91248441eafL53",
                    "lines": [
                      {
                        "line": " * Returns: A screen object if found, error if not found",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": " */",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "exports.get = function(req, db, identifier, callback) {",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "  db.get('project:' + req.params.id + ':screen:' + identifier, function(err, screen) {",
                        "lineNumber": 53,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  crud.get(req, 'project:' + req.params.id + ':screen:' + identifier, db, function(err, screen) {",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (err) {",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "      return callback(err);",
                        "lineNumber": 55,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/handshake-org/hsd/commit/582a8fe66c44d4d16f1be2807f26c7a10b2722e8?diff=split#diff-33f90a5fbfb7686a58bcad311bb49997L283",
                    "lines": [
                      {
                        "line": "async function updateWallet(wid) {",
                        "lineNumber": 284,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const raw = await db.get(layout.w(wid));",
                        "lineNumber": 285,
                        "lineChange": "none"
                      },
                      {
                        "line": "  assert(raw);",
                        "lineNumber": 286,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const br = bio.read(raw, true);",
                        "lineNumber": 288,
                        "lineChange": "none"
                      },
                      {
                        "line": "  br.readU32(); // Skip network.",
                        "lineNumber": 290,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const wid = br.readU32();",
                        "lineNumber": 288,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  br.readU32(); // Skip wid.",
                        "lineNumber": 291,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const id = br.readVarString('ascii');",
                        "lineNumber": 292,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const initialized = br.readU8() === 1;",
                        "lineNumber": 293,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ireapps/census/commit/18ec433f5bfb9356b6dac3b70ccdb17650963ca8?diff=split#diff-5933928215d2295a1a08721bd88a70f2L95",
                    "lines": [
                      {
                        "line": "success: function(states) {",
                        "lineNumber": 94,
                        "lineChange": "none"
                      },
                      {
                        "line": "    _.each(states, function(state) {",
                        "lineNumber": 95,
                        "lineChange": "none"
                      },
                      {
                        "line": "        query.mappings.states.push([state, STATES[state]]);",
                        "lineNumber": 96,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });",
                        "lineNumber": 97,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 98,
                        "lineChange": "none"
                      },
                      {
                        "line": "// Remove this section to enable \"go button\" prompt:",
                        "lineNumber": 220,
                        "lineChange": "none"
                      },
                      {
                        "line": "var q = window.query;",
                        "lineNumber": 221,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (query.get('summarylevel') && query.get(query.get(\"summarylevel\")))",
                        "lineNumber": 215,
                        "lineChange": "removed"
                      },
                      {
                        "line": "if (this.get('summarylevel') && this.get(this.get(\"summarylevel\")))",
                        "lineNumber": 222,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // The item we just selected is of the same type as our",
                        "lineNumber": 223,
                        "lineChange": "none"
                      },
                      {
                        "line": "    // target datatype. We just picked the value we wanted.",
                        "lineNumber": 224,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* Tests to TypeScript",
                  "* Adapt deletion + fix dependencies errors from yarn control",
                  "update config and database modules"
                ],
                "precision": "very-high",
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "file",
                  "server"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/soomtong/blititor/commit/6627d47e769eaa3308445105f924a514f9e750bd?diff=split#diff-832a2c38c4705ad5036bd453a0a9390bR23",
                    "lines": [
                      {
                        "line": "var consoleCommand = {",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "    list: path.join(executePath, 'list'),",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "    create: path.join(executePath, 'create'),",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "    connect: path.join(executePath, 'connect')",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "function viewGateway(req, res) {",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var params = {",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        title: '넷 앱 컨트롤러 허브',",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "var executePath = path.join(BLITITOR.root, 'theme', BLITITOR.config.site.theme, 'bin')",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var cmd = {",
                        "lineNumber": 62,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    list: path.join(executePath, 'list'),",
                        "lineNumber": 63,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    create: path.join(executePath, 'create'),",
                        "lineNumber": 64,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    connect: path.join(executePath, 'connect')",
                        "lineNumber": 65,
                        "lineChange": "removed"
                      },
                      {
                        "line": "};",
                        "lineNumber": 71,
                        "lineChange": "removed"
                      },
                      {
                        "line": "childProcess.execFile(cmd.list, { env: gatewayConnectionInfo }, function (error, stdout, stderr) {",
                        "lineNumber": 73,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var result = stdout.toString().replace(/\\\\n/g, '\\n');",
                        "lineNumber": 74,
                        "lineChange": "removed"
                      },
                      {
                        "line": "console.log(result);",
                        "lineNumber": 76,
                        "lineChange": "removed"
                      },
                      {
                        "line": "};",
                        "lineNumber": 80,
                        "lineChange": "added"
                      },
                      {
                        "line": "childProcess.execFile(consoleCommand.list, gatewayConnectionInfo, function (error, stdout, stderr) {",
                        "lineNumber": 82,
                        "lineChange": "added"
                      },
                      {
                        "line": "    var result = stdout.toString().replace(/\\\\n/g, '\\n');",
                        "lineNumber": 83,
                        "lineChange": "added"
                      },
                      {
                        "line": "console.log(result);",
                        "lineNumber": 85,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/webtorrent/webtorrent.io/commit/b91657799cdb07f6639f250f40dcc6bcbc7c1658?diff=split#diff-b751a6aa76f40c029af6d50a1fd2c836L234",
                    "lines": [
                      {
                        "line": "// WebTorrent Desktop Windows auto-update endpoint",
                        "lineNumber": 238,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/desktop/update/*', function (req, res) {",
                        "lineNumber": 239,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const pathname = new URL(req.url, 'http://example.com').pathname",
                        "lineNumber": 240,
                        "lineChange": "none"
                      },
                      {
                        "line": "  let filename = pathname.replace(/^\\/desktop\\/update\\//i, '')",
                        "lineNumber": 241,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const sysarch = req.query.sysarch || 'ia32' // if not specified, default to ia32",
                        "lineNumber": 243,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }",
                        "lineNumber": 257,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 258,
                        "lineChange": "none"
                      },
                      {
                        "line": "  const match = /-(\\d+\\.\\d+\\.\\d+)-/.exec(filename)",
                        "lineNumber": 259,
                        "lineChange": "none"
                      },
                      {
                        "line": "  fileVersion = match && match[1]",
                        "lineNumber": 260,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 261,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/lastmjs/zwitterion/commit/bd49184dcf08f1fd2b22f0b6ee168b93262997d4?diff=split#diff-7a9076d6d94e62c13d641aa71f19ae8eL189",
                    "lines": [
                      {
                        "line": "// end side-effects",
                        "lineNumber": 186,
                        "lineChange": "none"
                      },
                      {
                        "line": "function createNodeServer(http, nodePort, webSocketPort, watchFiles, tsWarning, tsError, target) {",
                        "lineNumber": 187,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return http.createServer(async (req, res) => {",
                        "lineNumber": 188,
                        "lineChange": "none"
                      },
                      {
                        "line": "        const fileExtension = req.url.slice(req.url.lastIndexOf('.') + 1);",
                        "lineNumber": 189,
                        "lineChange": "none"
                      },
                      {
                        "line": "        switch (fileExtension) {",
                        "lineNumber": 191,
                        "lineChange": "none"
                      },
                      {
                        "line": "            case '/': {",
                        "lineNumber": 192,
                        "lineChange": "none"
                      },
                      {
                        "line": "                const indexFileContents = (await fs.readFile(`./index.html`)).toString();",
                        "lineNumber": 193,
                        "lineChange": "none"
                      },
                      {
                        "line": "                const modifiedIndexFileContents = modifyHTML(indexFileContents, 'index.html', watchFiles, webSocketPort);",
                        "lineNumber": 194,
                        "lineChange": "none"
                      },
                      {
                        "line": "                res.end(modifiedIndexFileContents);",
                        "lineNumber": 195,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (!disableSpa) {",
                        "lineNumber": 417,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const indexFileContents = (await fs.readFile(`./index.html`)).toString();",
                        "lineNumber": 418,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const modifiedIndexFileContents = modifyHTML(indexFileContents, 'index.html', watchFiles, webSocketPort);",
                        "lineNumber": 419,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const directoryPath = req.url.slice(0, req.url.lastIndexOf('/')) || '/';",
                        "lineNumber": 420,
                        "lineChange": "added"
                      },
                      {
                        "line": "}",
                        "lineNumber": 575,
                        "lineChange": "none"
                      },
                      {
                        "line": "function modifyHTML(originalText, directoryPath, watchFiles, webSocketPort) {",
                        "lineNumber": 576,
                        "lineChange": "none"
                      },
                      {
                        "line": "    const text = originalText.includes('<head>') && watchFiles ? originalText.replace('<head>', `<head>",
                        "lineNumber": 577,
                        "lineChange": "none"
                      },
                      {
                        "line": "        <template>",
                        "lineNumber": 578,
                        "lineChange": "none"
                      },
                      {
                        "line": "            MIT License",
                        "lineNumber": 579,
                        "lineChange": "none"
                      },
                      {
                        "line": "        });",
                        "lineNumber": 598,
                        "lineChange": "none"
                      },
                      {
                        "line": "    </script>",
                        "lineNumber": 599,
                        "lineChange": "none"
                      },
                      {
                        "line": "`) : originalText.includes('<head>') ? originalText.replace(`<head>`, `<head>",
                        "lineNumber": 600,
                        "lineChange": "none"
                      },
                      {
                        "line": "        <template>",
                        "lineNumber": 601,
                        "lineChange": "none"
                      },
                      {
                        "line": "            MIT License",
                        "lineNumber": 602,
                        "lineChange": "none"
                      },
                      {
                        "line": "function getMatches(text, regex, matches) {",
                        "lineNumber": 631,
                        "lineChange": "none"
                      },
                      {
                        "line": "    const match = regex.exec(text);",
                        "lineNumber": 632,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (match === null) {",
                        "lineNumber": 633,
                        "lineChange": "none"
                      },
                      {
                        "line": "        return matches;",
                        "lineNumber": 634,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "More tests for both old and new config file formats.",
                  "Server code refactor + unit tests"
                ],
                "precision": "very-high",
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "javascript/CommandInjection",
              "name": "CommandInjection",
              "shortDescription": {
                "text": "Command Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "usability",
                  "knot",
                  "tests",
                  "tap"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/jupitex/sisyphe/commit/e20429a0dace6de8ce88a48aebb3548f0df16d21?diff=split#diff-78c12f5adc1848d13b1c6f07055d996eL37",
                    "lines": [
                      {
                        "line": "  res.send('stop');",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.post('/launch', async function (req, res) {",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "  if (!sisyphe) {",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": "    console.log(`launch: ${req.body.command}`);",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.send(true);",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "    sisyphe = cp.exec(`./app ${req.body.command}`, (error, stdout, stderr) => (sisyphe = null));",
                        "lineNumber": 40,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    sisyphe = cp.spawn(`./app`, req.body.command.split(' '));",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "    sisyphe.stdout.pipe(process.stdout);",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "    sisyphe.on('exit', _=>{",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "} else {",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "  console.log('Already launch');",
                        "lineNumber": 46,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/alexanderscott/node-deploy-hook/commit/7c0c3744963b54aca08fe7a63cdd7917dc18ca07?diff=split#diff-b25e269b74cf2dc7e980e7f8d9b3d3a2L56",
                    "lines": [
                      {
                        "line": "};",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.all(\"/deploy\", function(req, res){",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var projectDirName = path.normalize(req.params.project || config.defaultProject),",
                        "lineNumber": 56,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var projectDir = path.normalize(req.params.project ? config.serverRoot+req.params.project : __dirname),",
                        "lineNumber": 56,
                        "lineChange": "added"
                      },
                      {
                        "line": "        remoteBranch = req.params.remote_branch || 'origin',",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "        localBranch = req.params.local_branch || 'master',",
                        "lineNumber": 58,
                        "lineChange": "none"
                      },
                      {
                        "line": "        deployJSON;",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var deploy = childprocess.exec(\"cd ../\"+projectDirName+\" && git pull \"+remoteBranch+\" \"+localBranch, function(err, stdout, stderr){",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var deploy = childprocess.exec(\"cd \"+projectDirName+\" && git pull \"+remoteBranch+\" \"+localBranch, function(err, stdout, stderr){",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "        if(err){",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "            deployJSON = { subject: subjectOnError, message: \"Error pulling down remote repository:: \\n\"+err, error: true  };",
                        "lineNumber": 63,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/houshuang/madoko/commit/c0ad6fa4de841c95746453d6c8219286885828a6?diff=split#diff-e82c6b972b371af4ee351a5887f83bb8L266",
                    "lines": [
                      {
                        "line": "// execute madoko program",
                        "lineNumber": 409,
                        "lineChange": "none"
                      },
                      {
                        "line": "function madokoExec( userpath, docname, flags, timeout ) {",
                        "lineNumber": 410,
                        "lineChange": "none"
                      },
                      {
                        "line": "  var command = /* \"madoko */ \"node ../../client/lib/cli.js \" + flags + \" \" + stdflags + \" \"  + docname;",
                        "lineNumber": 411,
                        "lineChange": "none"
                      },
                      {
                        "line": "  return new Promise( function(cont) {",
                        "lineNumber": 412,
                        "lineChange": "none"
                      },
                      {
                        "line": "    console.log(\"> \" + command);",
                        "lineNumber": 413,
                        "lineChange": "none"
                      },
                      {
                        "line": "    cp.exec( command, {cwd: userpath, timeout: timeout || 10000, maxBuffer: 512*1024 }, cont);",
                        "lineNumber": 414,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }); ",
                        "lineNumber": 415,
                        "lineChange": "none"
                      },
                      {
                        "line": "}",
                        "lineNumber": 416,
                        "lineChange": "none"
                      },
                      {
                        "line": "// -------------------------------------------------------------",
                        "lineNumber": 493,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.post('/rest/run', function(req,res) {",
                        "lineNumber": 495,
                        "lineChange": "none"
                      },
                      {
                        "line": "  event( res, function() {",
                        "lineNumber": 342,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var userpath = getUserPath(req,res);",
                        "lineNumber": 343,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.log(\"run request: \" + userpath);",
                        "lineNumber": 344,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var docname  = req.body.docname || \"document.mdk\";",
                        "lineNumber": 345,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var files    = req.body.files || [];",
                        "lineNumber": 346,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var pdf      = req.body.pdf || false;",
                        "lineNumber": 347,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  event( req, res, function() {",
                        "lineNumber": 496,
                        "lineChange": "added"
                      },
                      {
                        "line": "    return withUser(req, res, function(user) {",
                        "lineNumber": 497,
                        "lineChange": "added"
                      },
                      {
                        "line": "      console.log(\"run request: \" + (req.body.round ? req.body.round.toString() + \": \" : \"\") + user.path);",
                        "lineNumber": 498,
                        "lineChange": "added"
                      },
                      {
                        "line": "      var docname  = req.body.docname || \"document.mdk\";",
                        "lineNumber": 499,
                        "lineChange": "added"
                      },
                      {
                        "line": "      var files    = req.body.files || [];",
                        "lineNumber": 500,
                        "lineChange": "added"
                      },
                      {
                        "line": "      var pdf      = req.body.pdf || false;",
                        "lineNumber": 501,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "* Test delete knot",
                  "* Test new util functions",
                  "* Support legacy taps when editing schema"
                ],
                "precision": "very-high",
                "cwe": [
                  "CWE-78"
                ]
              }
            },
            {
              "id": "javascript/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n### How to prevent\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "maintenance",
                  "server",
                  "API",
                  "tests"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/softwerkskammer/Agora/commit/4d49e5d2539693e1365e9c41b2668033b347af4c?diff=split#diff-708c4934bc671f6c08a782057ac08622L10",
                    "lines": [
                      {
                        "line": "});",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.get('/:id', function (req, res) {",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.send('Event ' + req.params.id);",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  res.render('index', { title: 'Event ' + req.params.id });",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 11,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/michaelNgiri/StackOverflow-Lite/commit/1edf2f1ca9ae20ad34da4328aaef34771ae81a67?diff=split#diff-0364f57fbff2fabbe941ed20c328ef1aL31",
                    "lines": [
                      {
                        "line": "app.get('/', (req, res)=>{",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    console.log(req.headers);",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "    res.send(req.headers);",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    res.status(200).send(req.headers);",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "});",
                        "lineNumber": 33,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jlfwong/1rt/commit/e13333e1e876fd6757c1c93195c8ee42b0e75c2a?diff=split#diff-e6a5b42b2f7a26c840607370aed5301aL60",
                    "lines": [
                      {
                        "line": "const epilogue = `</body></html>`;",
                        "lineNumber": 57,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use('/api', (req, res) => {",
                        "lineNumber": 59,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.setHeader('Content-Type', 'application/json');",
                        "lineNumber": 60,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.send(TopicTree.getDataForPaths(req.path.split(\",\"),",
                        "lineNumber": 61,
                        "lineChange": "none"
                      },
                      {
                        "line": "                                     FullTopicTree));",
                        "lineNumber": 62,
                        "lineChange": "none"
                      },
                      {
                        "line": "});",
                        "lineNumber": 63,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [
                  "Fix test messages in `server`",
                  "* fixing API tests"
                ],
                "precision": "very-high",
                "cwe": [
                  "CWE-79"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/HttpToHttps",
          "ruleIndex": 0,
          "level": "warning",
          "message": {
            "text": "{0} (used in {1}) is an insecure protocol and should not be used in new code.",
            "markdown": "http (used in require) is an insecure protocol and should not be used in new code.",
            "arguments": [
              "[http](0)",
              "[require](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js",
                  "uriBaseId": ""
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "startColumn": 12,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3ea18be0bec01f592b12b5ddc9d1979b0ae5d6cd00caf8850c588365b1762826",
            "1": "7a85a498.4773f344.607187b5.d7919eeb.f7b6c27c.5fce695c.fee35010.89d75565.7a85a498.4773f344.607187b5.d7919eeb.f7b6c27c.5fce695c.fee35010.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 20,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "javascript/DisablePoweredBy",
          "ruleIndex": 1,
          "level": "warning",
          "message": {
            "text": "Disable X-Powered-By header for your {0} (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "markdown": "Disable X-Powered-By header for your Express app (consider using Helmet middleware), because it exposes information about the used framework to potential attackers.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "app.js",
                  "uriBaseId": ""
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ebe407f331c17fc07dcd76bd03c0e4a17f5f13a34c5abd0579b5bb87c5c82caf",
            "1": "ae77ea27.4773f344.607187b5.d7919eeb.a1fb1152.5fce695c.fee35010.89d75565.630e4ed1.4773f344.aa4dda5f.d7919eeb.f30fb760.49b28873.85bdc101.83642794"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "app.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "text": "Unsanitized input from '{0}' '{1}' into '{2}', where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from the HTTP request body flows into find, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4)",
              "[find](5)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": ""
                },
                "region": {
                  "startLine": 39,
                  "endLine": 39,
                  "startColumn": 3,
                  "endColumn": 11
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9fc5513cc5517086c7f6c355f20128583159301b0dd9f01da6d7839d61c36cc",
            "1": "12567ef6.4773f344.7fde84c3.750eb3ec.cea4e9be.8020cfdf.cd61fc56.3cd69235.f759b1f9.4773f344.7fde84c3.08906714.79a7d027.5fce695c.c0a0d45c.1ce8e212"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 38,
                            "endLine": 38,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 25,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 15,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 13,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 39,
                            "endLine": 39,
                            "startColumn": 3,
                            "endColumn": 11
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This endpoint handler performs a system command execution and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a system command execution](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": ""
                },
                "region": {
                  "startLine": 77,
                  "endLine": 113,
                  "startColumn": 18,
                  "endColumn": 1
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7f1fe0ba1c8f4b9b9c7a36530701f67cd59c889c0941f2f859e84fea03be1c24",
            "1": "a3c051e6.9c6e2949.98501263.c559ebce.b5c66366.5fce695c.83265159.89d75565.a3c051e6.4773f344.c2905f73.c559ebce.b6be8b13.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 113,
                            "startColumn": 18,
                            "endColumn": 1
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": ""
                },
                "region": {
                  "startLine": 166,
                  "endLine": 221,
                  "startColumn": 18,
                  "endColumn": 1
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d79e1fa8a8eef82b373276a3f3e22c9c59dad6a03a5f773ca45e603647e8fd19",
            "1": "ae77ea27.9c6e2949.98501263.c559ebce.fd1fa73f.5fce695c.83265159.89d75565.c3f8dfad.4773f344.1ec824b2.c559ebce.546471fb.5fce695c.83265159.2f05c567"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 166,
                            "endLine": 221,
                            "startColumn": 18,
                            "endColumn": 1
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 184,
                            "endLine": 184,
                            "startColumn": 17,
                            "endColumn": 28
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 6,
          "level": "warning",
          "message": {
            "text": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": ""
                },
                "region": {
                  "startLine": 223,
                  "endLine": 231,
                  "startColumn": 21,
                  "endColumn": 1
                }
              }
            }
          ],
          "fingerprints": {
            "0": "be9935f1cfe8fed9a4547a11a55d7c0bcfcb370aac72ffb9e7560283aeef67ad",
            "1": "ae77ea27.4773f344.607187b5.1c17f46e.93e94ad5.5fce695c.83265159.89d75565.ae77ea27.4773f344.607187b5.1c17f46e.93e94ad5.5fce695c.83265159.89d75565"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 231,
                            "startColumn": 21,
                            "endColumn": 1
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 225,
                            "endLine": 225,
                            "startColumn": 21,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "javascript/CommandInjection",
          "ruleIndex": 7,
          "level": "error",
          "message": {
            "text": "Unsanitized input from {0} {1} into {2}, where it is used to build a shell command. This may result in a Command Injection vulnerability.",
            "markdown": "Unsanitized input from the HTTP request body flows into child_process.exec, where it is used to build a shell command. This may result in a Command Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[child_process.exec](9)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": ""
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "startColumn": 5,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "809486a1de680ae57f43f8963399080afde8bfd7e5712c436be88b2fe870c048",
            "1": "8981fa39.4773f344.c2905f73.7da15f0a.b6be8b13.2f4e1548.cd61fc56.b20a940a.6849fe68.4773f344.b3570a8d.08906714.3f452f8c.97d5e2e9.83265159.f51872e4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 15,
                            "endColumn": 34
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 9,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 10,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 5,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from the HTTP request body flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17),(18),(19)",
              "[send](20)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/index.js",
                  "uriBaseId": ""
                },
                "region": {
                  "startLine": 109,
                  "endLine": 109,
                  "startColumn": 5,
                  "endColumn": 24
                }
              }
            }
          ],
          "fingerprints": {
            "0": "740eaa3f4ae3dc1949c96d62f760e6c36f7bd1a0281eeceeb76b85b790eaa18e",
            "1": "f0155d5f.4773f344.a32ed1a1.5e127924.b0f6e810.e9c60572.cd61fc56.7b9afb6b.6849fe68.7f46b8bf.b3570a8d.08906714.3f452f8c.97d5e2e9.f0256597.46608d7c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 14,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 7,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 18,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 56,
                            "endLine": 56,
                            "startColumn": 7,
                            "endColumn": 7
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 18,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 16,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 9,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 9,
                            "endColumn": 15
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 74,
                            "endLine": 74,
                            "startColumn": 10,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 14,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 98,
                            "endLine": 98,
                            "startColumn": 5,
                            "endColumn": 11
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 26,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 26,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 19,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 26,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 20,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/index.js",
                            "uriBaseId": ""
                          },
                          "region": {
                            "startLine": 109,
                            "endLine": 109,
                            "startColumn": 5,
                            "endColumn": 24
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 8,
            "isSupported": true,
            "lang": "JavaScript"
          },
          {
            "files": 1,
            "isSupported": true,
            "lang": "HTML"
          }
        ]
      }
    }
  ]
}

